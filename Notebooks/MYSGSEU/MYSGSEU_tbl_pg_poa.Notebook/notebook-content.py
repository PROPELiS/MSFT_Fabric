# Fabric notebook source

# METADATA ********************

# META {
# META   "kernel_info": {
# META     "name": "synapse_pyspark"
# META   },
# META   "dependencies": {
# META     "lakehouse": {
# META       "default_lakehouse": "aabf914c-0501-4c58-ba5b-4b0f05f4420f",
# META       "default_lakehouse_name": "SILVER",
# META       "default_lakehouse_workspace_id": "c8d75176-b949-4f7e-a658-b996603ec8c3",
# META       "known_lakehouses": [
# META         {
# META           "id": "aabf914c-0501-4c58-ba5b-4b0f05f4420f"
# META         }
# META       ]
# META     }
# META   }
# META }

# CELL ********************

in_mode = "FULL"  # Replace with the actual IN_MODE value

# METADATA ********************

# META {
# META   "language": "python",
# META   "language_group": "synapse_pyspark"
# META }

# CELL ********************

# Welcome to your new notebook
# Type here in the cell editor to add code!
from pyspark.sql.functions import concat_ws, expr, sha2, size, lit, col, array, struct, udf, current_timestamp, max as spark_max
from functools import reduce
from pyspark.sql.types import *
from pyspark.sql import *
from delta.tables import *
from pyspark.sql import SparkSession
from delta.tables import DeltaTable
from pyspark.sql.types import StructType, StructField, StringType, TimestampType

# Define the schema for the order data
orderSchema = StructType([
    StructField("SYS_CHANGE_VERSION", StringType(), True),
    StructField("SYS_CHANGE_CREATION_VERSION", StringType(), True),
    StructField("SYS_CHANGE_OPERATION", StringType(), True),
    StructField("SYS_CHANGE_COLUMNS", StringType(), True),
    StructField("SYS_CHANGE_CONTEXT", StringType(), True),
    StructField("CT_POAId", StringType(), True),
    StructField("POAId", StringType(), True),
    StructField("PDRId", StringType(), True),
    StructField("POANumber", StringType(), True),
    StructField("AdditionalDesc", StringType(), True),
    StructField("BrandInfo", StringType(), True),
    StructField("Brand", StringType(), True),
    StructField("Item", StringType(), True),
    StructField("Format", StringType(), True),
    StructField("PackSize", StringType(), True),
    StructField("PackSizeUnit", StringType(), True),
    StructField("CountryIcons", StringType(), True),
    StructField("CountriesOfSale", StringType(), True),
    StructField("Languages", StringType(), True),
    StructField("ManufacturingPlants", StringType(), True),
    StructField("TechDrawingWithVer", StringType(), True),
    StructField("PrintingProcess", StringType(), True),
    StructField("InsidePrintingIPMSNumber", StringType(), True),
    StructField("PackMaterialType", StringType(), True),
    StructField("PackComponentType", StringType(), True),
    StructField("FinishedProductCode", StringType(), True),
    StructField("COBarcode", StringType(), True),
    StructField("Printer", StringType(), True),
    StructField("NewIPMSNumber", StringType(), True),
    StructField("OldIPMSNumber", StringType(), True),
    StructField("Colours", StringType(), True),
    StructField("LastUpdate", StringType(), True),
    StructField("ProductExtraVariant", StringType(), True),
    StructField("MarketingCountry", StringType(), True),
    StructField("GCAS", StringType(), True),
    StructField("SupplierCode", StringType(), True),
    StructField("TPOANumber", StringType(), True),
    StructField("MPMSNumber", StringType(), True),
    StructField("PackagingLevel", StringType(), True),
    StructField("CUBarcode", StringType(), True),
    StructField("CaseCount", StringType(), True),
    StructField("SiteId", StringType(), True),
    StructField("DisplayedName", StringType(), True),
    StructField("PrintToolMaker", StringType(), True),
    StructField("Status", StringType(), True),
    StructField("CICReference", StringType(), True),
    StructField("Enovia", StringType(), True),
    StructField("AFPP", StringType(), True),
    StructField("FPP", StringType(), True),
    StructField("BIS", StringType(), True),
    StructField("RepId", StringType(), True),
    StructField("RDT", StringType(), True),
    StructField("PurchaseOrder", StringType(), True),
    StructField("PackagingCQV", StringType(), True),
    StructField("Substrate", StringType(), True),
    StructField("SpecialPrintFeature", StringType(), True),
    StructField("SalesSamples", StringType(), True),
    StructField("CaseType", StringType(), True),
    StructField("PalletPattern", StringType(), True),
    StructField("SubstrateColour", StringType(), True),
    StructField("MaxStackHeight", StringType(), True),
    StructField("CaseOutsideDimensions", StringType(), True),
    StructField("CUGrossWeight", StringType(), True),
    StructField("CUNetWeight", StringType(), True),
    StructField("MPMSName", StringType(), True),
    StructField("MPMSDescription", StringType(), True),
    StructField("PackagingMaterialDescription", StringType(), True),
    StructField("MaterialCategory", StringType(), True),
    StructField("SuppressedGTIN", StringType(), True),
    StructField("ProductType", StringType(), True),
    StructField("MaterialName", StringType(), True),
    StructField("SubBrand", StringType(), True),
    StructField("EnoviaObjectId", StringType(), True),
    StructField("PMPStatus", StringType(), True),
    StructField("PMPTitle", StringType(), True),
    StructField("PMPDescription", StringType(), True),
    StructField("PreviousPMP", StringType(), True),
    StructField("PreviousFPP", StringType(), True),
    StructField("TechnicalDrawingFileLocation", StringType(), True),
    StructField("TechDrawingFileName", StringType(), True),
    StructField("TechDrawingState", StringType(), True),
    StructField("TechnicalDrawingPrimaryFolderId", StringType(), True),
    StructField("TechnicalDrawingAltFolderId", StringType(), True),
    StructField("PMPNumLanguages", StringType(), True),
    StructField("TechDrawingRevision", StringType(), True),
    StructField("CopyVersionLinkedFA", StringType(), True),
    StructField("CopyVersionLinkedCIC", StringType(), True),
    StructField("CIC", StringType(), True),
    StructField("LatestCopyXMLVersion", StringType(), True),
    StructField("LatestCopyXMLState", StringType(), True),
    StructField("Obsolete", StringType(), True),
    StructField("CopyElementCount", StringType(), True),
    StructField("CaseInsideDimensions", StringType(), True),
    StructField("TechDrawingWithVerEnovia", StringType(), True),
    StructField("LocalInformation", StringType(), True),
    StructField("Othercomment", StringType(), True),
    StructField("IsPOAOnHold", StringType(), True),
    StructField("SecondaryPrinter", StringType(), True),
    StructField("AssemblyRework", StringType(), True)
])

# Initialize Spark session
spark = SparkSession.builder \
    .appName("Bronze to Silver Merge") \
    .config("spark.sql.extensions", "io.delta.sql.DeltaSparkSessionExtension") \
    .config("spark.sql.catalog.spark_catalog", "org.apache.spark.sql.delta.catalog.DeltaCatalog") \
    .getOrCreate()

    # Define the schema
schema = StructType([
    StructField("SYS_CHANGE_VERSION", StringType(), True),
    StructField("SYS_CHANGE_OPERATION", StringType(), True),
    StructField("POAId", StringType(), True),
    StructField("PDRId", StringType(), True),
    StructField("POANumber", StringType(), True),
    StructField("AdditionalDesc", StringType(), True),
    StructField("BrandInfo", StringType(), True),
    StructField("Brand", StringType(), True),
    StructField("Item", StringType(), True),
    StructField("Format", StringType(), True),
    StructField("PackSize", StringType(), True),
    StructField("PackSizeUnit", StringType(), True),
    StructField("CountryIcons", StringType(), True),
    StructField("CountriesOfSale", StringType(), True),
    StructField("Languages", StringType(), True),
    StructField("ManufacturingPlants", StringType(), True),
    StructField("TechDrawingWithVer", StringType(), True),
    StructField("PrintingProcess", StringType(), True),
    StructField("InsidePrintingIPMSNumber", StringType(), True),
    StructField("PackMaterialType", StringType(), True),
    StructField("PackComponentType", StringType(), True),
    StructField("FinishedProductCode", StringType(), True),
    StructField("COBarcode", StringType(), True),
    StructField("Printer", StringType(), True),
    StructField("NewIPMSNumber", StringType(), True),
    StructField("OldIPMSNumber", StringType(), True),
    StructField("Colours", StringType(), True),
    StructField("LastUpdate", StringType(), True),
    StructField("ProductExtraVariant", StringType(), True),
    StructField("MarketingCountry", StringType(), True),
    StructField("GCAS", StringType(), True),
    StructField("SupplierCode", StringType(), True),
    StructField("TPOANumber", StringType(), True),
    StructField("MPMSNumber", StringType(), True),
    StructField("PackagingLevel", StringType(), True),
    StructField("CUBarcode", StringType(), True),
    StructField("CaseCount", StringType(), True),
    StructField("SiteId", StringType(), True),
    StructField("DisplayedName", StringType(), True),
    StructField("PrintToolMaker", StringType(), True),
    StructField("Status", StringType(), True),
    StructField("CICReference", StringType(), True),
    StructField("Enovia", StringType(), True),
    StructField("AFPP", StringType(), True),
    StructField("FPP", StringType(), True),
    StructField("BIS", StringType(), True),
    StructField("RepId", StringType(), True),
    StructField("RDT", StringType(), True),
    StructField("PurchaseOrder", StringType(), True),
    StructField("PackagingCQV", StringType(), True),
    StructField("Substrate", StringType(), True),
    StructField("SpecialPrintFeature", StringType(), True),
    StructField("SalesSamples", StringType(), True),
    StructField("CaseType", StringType(), True),
    StructField("PalletPattern", StringType(), True),
    StructField("SubstrateColour", StringType(), True),
    StructField("MaxStackHeight", StringType(), True),
    StructField("CaseOutsideDimensions", StringType(), True),
    StructField("CUGrossWeight", StringType(), True),
    StructField("CUNetWeight", StringType(), True),
    StructField("MPMSName", StringType(), True),
    StructField("MPMSDescription", StringType(), True),
    StructField("PackagingMaterialDescription", StringType(), True),
    StructField("MaterialCategory", StringType(), True),
    StructField("SuppressedGTIN", StringType(), True),
    StructField("ProductType", StringType(), True),
    StructField("MaterialName", StringType(), True),
    StructField("SubBrand", StringType(), True),
    StructField("EnoviaObjectId", StringType(), True),
    StructField("PMPStatus", StringType(), True),
    StructField("PMPTitle", StringType(), True),
    StructField("PMPDescription", StringType(), True),
    StructField("PreviousPMP", StringType(), True),
    StructField("PreviousFPP", StringType(), True),
    StructField("TechnicalDrawingFileLocation", StringType(), True),
    StructField("TechDrawingFileName", StringType(), True),
    StructField("TechDrawingState", StringType(), True),
    StructField("TechnicalDrawingPrimaryFolderId", StringType(), True),
    StructField("TechnicalDrawingAltFolderId", StringType(), True),
    StructField("PMPNumLanguages", StringType(), True),
    StructField("TechDrawingRevision", StringType(), True),
    StructField("CopyVersionLinkedFA", StringType(), True),
    StructField("CopyVersionLinkedCIC", StringType(), True),
    StructField("CIC", StringType(), True),
    StructField("LatestCopyXMLVersion", StringType(), True),
    StructField("LatestCopyXMLState", StringType(), True),
    StructField("Obsolete", StringType(), True),
    StructField("CopyElementCount", StringType(), True),
    StructField("CaseInsideDimensions", StringType(), True),
    StructField("TechDrawingWithVerEnovia", StringType(), True),
    StructField("LocalInformation", StringType(), True),
    StructField("Othercomment", StringType(), True),
    StructField("IsPOAOnHold", StringType(), True),
    StructField("SecondaryPrinter", StringType(), True),
    StructField("AssemblyRework", StringType(), True)
])
# Create an empty DataFrame with the schema
df = spark.createDataFrame([], schema)
silver_path="abfss://Propelis_Fabric_Production@onelake.dfs.fabric.microsoft.com/SILVER.Lakehouse/Tables/MYSGSEU/tbl_pg_poa"
silver_table = DeltaTable.forPath(spark, silver_path)
# Parameters
param = ""  # Replace with the actual PARAM value

# If-else logic to control the flow based on in_mode
if in_mode == "FULL":
   
    
    df.write.format("delta").mode("overwrite").saveAsTable("MYSGSEU.tbl_pg_poa")
    # Write the DataFrame as a Delta table
    bronze_Path ="abfss://Propelis_Fabric_Production@onelake.dfs.fabric.microsoft.com/BRONZE.Lakehouse/Tables/MYSGSEU/tbl_pg_poa_FULL"
    # Load Delta tables correctly
    bronze_df = spark.read.format("delta").load(bronze_Path)
    
        # Merge data from Bronze Full to Silver
    silver_table.alias("target").merge(
    bronze_df.alias("source"),
    "target.POAId = source.POAId"
).whenMatchedUpdate(set={
    "SYS_CHANGE_VERSION": "source.SYS_CHANGE_VERSION",
    "SYS_CHANGE_OPERATION": "source.SYS_CHANGE_OPERATION",
    "POAId": "source.POAId",
    "PDRId": "source.PDRId",
    "POANumber": "source.POANumber",
    "AdditionalDesc": "source.AdditionalDesc",
    "BrandInfo": "source.BrandInfo",
    "Brand": "source.Brand",
    "Item": "source.Item",
    "Format": "source.Format",
    "PackSize": "source.PackSize",
    "PackSizeUnit": "source.PackSizeUnit",
    "CountryIcons": "source.CountryIcons",
    "CountriesOfSale": "source.CountriesOfSale",
    "Languages": "source.Languages",
    "ManufacturingPlants": "source.ManufacturingPlants",
    "TechDrawingWithVer": "source.TechDrawingWithVer",
    "PrintingProcess": "source.PrintingProcess",
    "InsidePrintingIPMSNumber": "source.InsidePrintingIPMSNumber",
    "PackMaterialType": "source.PackMaterialType",
    "PackComponentType": "source.PackComponentType",
    "FinishedProductCode": "source.FinishedProductCode",
    "COBarcode": "source.COBarcode",
    "Printer": "source.Printer",
    "NewIPMSNumber": "source.NewIPMSNumber",
    "OldIPMSNumber": "source.OldIPMSNumber",
    "Colours": "source.Colours",
    "LastUpdate": "source.LastUpdate",
    "ProductExtraVariant": "source.ProductExtraVariant",
    "MarketingCountry": "source.MarketingCountry",
    "GCAS": "source.GCAS",
    "SupplierCode": "source.SupplierCode",
    "TPOANumber": "source.TPOANumber",
    "MPMSNumber": "source.MPMSNumber",
    "PackagingLevel": "source.PackagingLevel",
    "CUBarcode": "source.CUBarcode",
    "CaseCount": "source.CaseCount",
    "SiteId": "source.SiteId",
    "DisplayedName": "source.DisplayedName",
    "PrintToolMaker": "source.PrintToolMaker",
    "Status": "source.Status",
    "CICReference": "source.CICReference",
    "Enovia": "source.Enovia",
    "AFPP": "source.AFPP",
    "FPP": "source.FPP",
    "BIS": "source.BIS",
    "RepId": "source.RepId",
    "RDT": "source.RDT",
    "PurchaseOrder": "source.PurchaseOrder",
    "PackagingCQV": "source.PackagingCQV",
    "Substrate": "source.Substrate",
    "SpecialPrintFeature": "source.SpecialPrintFeature",
    "SalesSamples": "source.SalesSamples",
    "CaseType": "source.CaseType",
    "PalletPattern": "source.PalletPattern",
    "SubstrateColour": "source.SubstrateColour",
    "MaxStackHeight": "source.MaxStackHeight",
    "CaseOutsideDimensions": "source.CaseOutsideDimensions",
    "CUGrossWeight": "source.CUGrossWeight",
    "CUNetWeight": "source.CUNetWeight",
    "MPMSName": "source.MPMSName",
    "MPMSDescription": "source.MPMSDescription",
    "PackagingMaterialDescription": "source.PackagingMaterialDescription",
    "MaterialCategory": "source.MaterialCategory",
    "SuppressedGTIN": "source.SuppressedGTIN",
    "ProductType": "source.ProductType",
    "MaterialName": "source.MaterialName",
    "SubBrand": "source.SubBrand",
    "EnoviaObjectId": "source.EnoviaObjectId",
    "PMPStatus": "source.PMPStatus",
    "PMPTitle": "source.PMPTitle",
    "PMPDescription": "source.PMPDescription",
    "PreviousPMP": "source.PreviousPMP",
    "PreviousFPP": "source.PreviousFPP",
    "TechnicalDrawingFileLocation": "source.TechnicalDrawingFileLocation",
    "TechDrawingFileName": "source.TechDrawingFileName",
    "TechDrawingState": "source.TechDrawingState",
    "TechnicalDrawingPrimaryFolderId": "source.TechnicalDrawingPrimaryFolderId",
    "TechnicalDrawingAltFolderId": "source.TechnicalDrawingAltFolderId",
    "PMPNumLanguages": "source.PMPNumLanguages",
    "TechDrawingRevision": "source.TechDrawingRevision",
    "CopyVersionLinkedFA": "source.CopyVersionLinkedFA",
    "CopyVersionLinkedCIC": "source.CopyVersionLinkedCIC",
    "CIC": "source.CIC",
    "LatestCopyXMLVersion": "source.LatestCopyXMLVersion",
    "LatestCopyXMLState": "source.LatestCopyXMLState",
    "Obsolete": "source.Obsolete",
    "CopyElementCount": "source.CopyElementCount",
    "CaseInsideDimensions": "source.CaseInsideDimensions",
    "TechDrawingWithVerEnovia": "source.TechDrawingWithVerEnovia",
    "LocalInformation": "source.LocalInformation",
    "Othercomment": "source.Othercomment",
    "IsPOAOnHold": "source.IsPOAOnHold",
    "SecondaryPrinter": "source.SecondaryPrinter",
    "AssemblyRework": "source.AssemblyRework"
}).whenNotMatchedInsert(values={
    "SYS_CHANGE_VERSION": "source.SYS_CHANGE_VERSION",
    "SYS_CHANGE_OPERATION": "source.SYS_CHANGE_OPERATION",
    "POAId": "source.POAId",
    "PDRId": "source.PDRId",
    "POANumber": "source.POANumber",
    "AdditionalDesc": "source.AdditionalDesc",
    "BrandInfo": "source.BrandInfo",
    "Brand": "source.Brand",
    "Item": "source.Item",
    "Format": "source.Format",
    "PackSize": "source.PackSize",
    "PackSizeUnit": "source.PackSizeUnit",
    "CountryIcons": "source.CountryIcons",
    "CountriesOfSale": "source.CountriesOfSale",
    "Languages": "source.Languages",
    "ManufacturingPlants": "source.ManufacturingPlants",
    "TechDrawingWithVer": "source.TechDrawingWithVer",
    "PrintingProcess": "source.PrintingProcess",
    "InsidePrintingIPMSNumber": "source.InsidePrintingIPMSNumber",
    "PackMaterialType": "source.PackMaterialType",
    "PackComponentType": "source.PackComponentType",
    "FinishedProductCode": "source.FinishedProductCode",
    "COBarcode": "source.COBarcode",
    "Printer": "source.Printer",
    "NewIPMSNumber": "source.NewIPMSNumber",
    "OldIPMSNumber": "source.OldIPMSNumber",
    "Colours": "source.Colours",
    "LastUpdate": "source.LastUpdate",
    "ProductExtraVariant": "source.ProductExtraVariant",
    "MarketingCountry": "source.MarketingCountry",
    "GCAS": "source.GCAS",
    "SupplierCode": "source.SupplierCode",
    "TPOANumber": "source.TPOANumber",
    "MPMSNumber": "source.MPMSNumber",
    "PackagingLevel": "source.PackagingLevel",
    "CUBarcode": "source.CUBarcode",
    "CaseCount": "source.CaseCount",
    "SiteId": "source.SiteId",
    "DisplayedName": "source.DisplayedName",
    "PrintToolMaker": "source.PrintToolMaker",
    "Status": "source.Status",
    "CICReference": "source.CICReference",
    "Enovia": "source.Enovia",
    "AFPP": "source.AFPP",
    "FPP": "source.FPP",
    "BIS": "source.BIS",
    "RepId": "source.RepId",
    "RDT": "source.RDT",
    "PurchaseOrder": "source.PurchaseOrder",
    "PackagingCQV": "source.PackagingCQV",
    "Substrate": "source.Substrate",
    "SpecialPrintFeature": "source.SpecialPrintFeature",
    "SalesSamples": "source.SalesSamples",
    "CaseType": "source.CaseType",
    "PalletPattern": "source.PalletPattern",
    "SubstrateColour": "source.SubstrateColour",
    "MaxStackHeight": "source.MaxStackHeight",
    "CaseOutsideDimensions": "source.CaseOutsideDimensions",
    "CUGrossWeight": "source.CUGrossWeight",
    "CUNetWeight": "source.CUNetWeight",
    "MPMSName": "source.MPMSName",
    "MPMSDescription": "source.MPMSDescription",
    "PackagingMaterialDescription": "source.PackagingMaterialDescription",
    "MaterialCategory": "source.MaterialCategory",
    "SuppressedGTIN": "source.SuppressedGTIN",
    "ProductType": "source.ProductType",
    "MaterialName": "source.MaterialName",
    "SubBrand": "source.SubBrand",
    "EnoviaObjectId": "source.EnoviaObjectId",
    "PMPStatus": "source.PMPStatus",
    "PMPTitle": "source.PMPTitle",
    "PMPDescription": "source.PMPDescription",
    "PreviousPMP": "source.PreviousPMP",
    "PreviousFPP": "source.PreviousFPP",
    "TechnicalDrawingFileLocation": "source.TechnicalDrawingFileLocation",
    "TechDrawingFileName": "source.TechDrawingFileName",
    "TechDrawingState": "source.TechDrawingState",
    "TechnicalDrawingPrimaryFolderId": "source.TechnicalDrawingPrimaryFolderId",
    "TechnicalDrawingAltFolderId": "source.TechnicalDrawingAltFolderId",
    "PMPNumLanguages": "source.PMPNumLanguages",
    "TechDrawingRevision": "source.TechDrawingRevision",
    "CopyVersionLinkedFA": "source.CopyVersionLinkedFA",
    "CopyVersionLinkedCIC": "source.CopyVersionLinkedCIC",
    "CIC": "source.CIC",
    "LatestCopyXMLVersion": "source.LatestCopyXMLVersion",
    "LatestCopyXMLState": "source.LatestCopyXMLState",
    "Obsolete": "source.Obsolete",
    "CopyElementCount": "source.CopyElementCount",
    "CaseInsideDimensions": "source.CaseInsideDimensions",
    "TechDrawingWithVerEnovia": "source.TechDrawingWithVerEnovia",
    "LocalInformation": "source.LocalInformation",
    "Othercomment": "source.Othercomment",
    "IsPOAOnHold": "source.IsPOAOnHold",
    "SecondaryPrinter": "source.SecondaryPrinter",
    "AssemblyRework": "source.AssemblyRework"
}).execute()

else:
    
    df.write.format("delta").mode("append").saveAsTable("MYSGSEU.tbl_pg_poa")
    
    source_path = "abfss://Propelis_Fabric_Production@onelake.dfs.fabric.microsoft.com/BRONZE.Lakehouse/Tables/MYSGSEU/tbl_pg_poa_DELTA"
    source_df_delta = spark.read.format("delta").load(source_path)

    # Filter the source DataFrame for "D" operations and select distinct CT_Id
    filtered_source_df = source_df_delta.filter(source_df_delta["SYS_CHANGE_OPERATION"] == "D") \
    .select("CT_POAId") \
    .distinct()

   # Perform the MERGE operation
    silver_table.alias("T") \
    .merge(filtered_source_df.alias("S"), "T.POAId = S.CT_POAId") \
    .whenMatchedDelete() \
    .execute()

    # Perform the transformation with all required columns
    transformed_df = source_df_delta.alias("a").join(
        source_df_delta.groupBy("POAId")
        .agg(spark_max(col("SYS_CHANGE_VERSION").cast("bigint")).alias("SYS_CHANGE_VERSION"))
        .alias("b"),
        (col("a.POAId") == col("b.POAId")) & 
        (col("a.SYS_CHANGE_VERSION").cast("bigint") == col("b.SYS_CHANGE_VERSION"))
    ).where(col("a.SYS_CHANGE_OPERATION") != 'D') \
    .select(
        col("a.SYS_CHANGE_VERSION"),
        col("a.SYS_CHANGE_OPERATION"),
        col("a.POAId"),
        col("a.PDRId"),
        col("a.POANumber"),
        col("a.AdditionalDesc"),
        col("a.BrandInfo"),
        col("a.Brand"),
        col("a.Item"),
        col("a.Format"),
        col("a.PackSize"),
        col("a.PackSizeUnit"),
        col("a.CountryIcons"),
        col("a.CountriesOfSale"),
        col("a.Languages"),
        col("a.ManufacturingPlants"),
        col("a.TechDrawingWithVer"),
        col("a.PrintingProcess"),
        col("a.InsidePrintingIPMSNumber"),
        col("a.PackMaterialType"),
        col("a.PackComponentType"),
        col("a.FinishedProductCode"),
        col("a.COBarcode"),
        col("a.Printer"),
        col("a.NewIPMSNumber"),
        col("a.OldIPMSNumber"),
        col("a.Colours"),
        col("a.LastUpdate"),
        col("a.ProductExtraVariant"),
        col("a.MarketingCountry"),
        col("a.GCAS"),
        col("a.SupplierCode"),
        col("a.TPOANumber"),
        col("a.MPMSNumber"),
        col("a.PackagingLevel"),
        col("a.CUBarcode"),
        col("a.CaseCount"),
        col("a.SiteId"),
        col("a.DisplayedName"),
        col("a.PrintToolMaker"),
        col("a.Status"),
        col("a.CICReference"),
        col("a.Enovia"),
        col("a.AFPP"),
        col("a.FPP"),
        col("a.BIS"),
        col("a.RepId"),
        col("a.RDT"),
        col("a.PurchaseOrder"),
        col("a.PackagingCQV"),
        col("a.Substrate"),
        col("a.SpecialPrintFeature"),
        col("a.SalesSamples"),
        col("a.CaseType"),
        col("a.PalletPattern"),
        col("a.SubstrateColour"),
        col("a.MaxStackHeight"),
        col("a.CaseOutsideDimensions"),
        col("a.CUGrossWeight"),
        col("a.CUNetWeight"),
        col("a.MPMSName"),
        col("a.MPMSDescription"),
        col("a.PackagingMaterialDescription"),
        col("a.MaterialCategory"),
        col("a.SuppressedGTIN"),
        col("a.ProductType"),
        col("a.MaterialName"),
        col("a.SubBrand"),
        col("a.EnoviaObjectId"),
        col("a.PMPStatus"),
        col("a.PMPTitle"),
        col("a.PMPDescription"),
        col("a.PreviousPMP"),
        col("a.PreviousFPP"),
        col("a.TechnicalDrawingFileLocation"),
        col("a.TechDrawingFileName"),
        col("a.TechDrawingState"),
        col("a.TechnicalDrawingPrimaryFolderId"),
        col("a.TechnicalDrawingAltFolderId"),
        col("a.PMPNumLanguages"),
        col("a.TechDrawingRevision"),
        col("a.CopyVersionLinkedFA"),
        col("a.CopyVersionLinkedCIC"),
        col("a.CIC"),
        col("a.LatestCopyXMLVersion"),
        col("a.LatestCopyXMLState"),
        col("a.Obsolete"),
        col("a.CopyElementCount"),
        col("a.CaseInsideDimensions"),
        col("a.TechDrawingWithVerEnovia"),
        col("a.LocalInformation"),
        col("a.Othercomment"),
        col("a.IsPOAOnHold"),
        col("a.SecondaryPrinter"),
        col("a.AssemblyRework")

    ).distinct()

    # Perform the MERGE operation
    silver_table.alias("target").merge(
        transformed_df.alias("source"),
        "target.POAId = source.POAId"
    ).whenMatchedUpdate(set={
        "SYS_CHANGE_VERSION": col("source.SYS_CHANGE_VERSION"),
        "SYS_CHANGE_OPERATION": col("source.SYS_CHANGE_OPERATION"),
        "POAId": col("source.POAId"),
        "PDRId": col("source.PDRId"),
        "POANumber": col("source.POANumber"),
        "AdditionalDesc": col("source.AdditionalDesc"),
        "BrandInfo": col("source.BrandInfo"),
        "Brand": col("source.Brand"),
        "Item": col("source.Item"),
        "Format": col("source.Format"),
        "PackSize": col("source.PackSize"),
        "PackSizeUnit": col("source.PackSizeUnit"),
        "CountryIcons": col("source.CountryIcons"),
        "CountriesOfSale": col("source.CountriesOfSale"),
        "Languages": col("source.Languages"),
        "ManufacturingPlants": col("source.ManufacturingPlants"),
        "TechDrawingWithVer": col("source.TechDrawingWithVer"),
        "PrintingProcess": col("source.PrintingProcess"),
        "InsidePrintingIPMSNumber": col("source.InsidePrintingIPMSNumber"),
        "PackMaterialType": col("source.PackMaterialType"),
        "PackComponentType": col("source.PackComponentType"),
        "FinishedProductCode": col("source.FinishedProductCode"),
        "COBarcode": col("source.COBarcode"),
        "Printer": col("source.Printer"),
        "NewIPMSNumber": col("source.NewIPMSNumber"),
        "OldIPMSNumber": col("source.OldIPMSNumber"),
        "Colours": col("source.Colours"),
        "LastUpdate": col("source.LastUpdate"),
        "ProductExtraVariant": col("source.ProductExtraVariant"),
        "MarketingCountry": col("source.MarketingCountry"),
        "GCAS": col("source.GCAS"),
        "SupplierCode": col("source.SupplierCode"),
        "TPOANumber": col("source.TPOANumber"),
        "MPMSNumber": col("source.MPMSNumber"),
        "PackagingLevel": col("source.PackagingLevel"),
        "CUBarcode": col("source.CUBarcode"),
        "CaseCount": col("source.CaseCount"),
        "SiteId": col("source.SiteId"),
        "DisplayedName": col("source.DisplayedName"),
        "PrintToolMaker": col("source.PrintToolMaker"),
        "Status": col("source.Status"),
        "CICReference": col("source.CICReference"),
        "Enovia": col("source.Enovia"),
        "AFPP": col("source.AFPP"),
        "FPP": col("source.FPP"),
        "BIS": col("source.BIS"),
        "RepId": col("source.RepId"),
        "RDT": col("source.RDT"),
        "PurchaseOrder": col("source.PurchaseOrder"),
        "PackagingCQV": col("source.PackagingCQV"),
        "Substrate": col("source.Substrate"),
        "SpecialPrintFeature": col("source.SpecialPrintFeature"),
        "SalesSamples": col("source.SalesSamples"),
        "CaseType": col("source.CaseType"),
        "PalletPattern": col("source.PalletPattern"),
        "SubstrateColour": col("source.SubstrateColour"),
        "MaxStackHeight": col("source.MaxStackHeight"),
        "CaseOutsideDimensions": col("source.CaseOutsideDimensions"),
        "CUGrossWeight": col("source.CUGrossWeight"),
        "CUNetWeight": col("source.CUNetWeight"),
        "MPMSName": col("source.MPMSName"),
        "MPMSDescription": col("source.MPMSDescription"),
        "PackagingMaterialDescription": col("source.PackagingMaterialDescription"),
        "MaterialCategory": col("source.MaterialCategory"),
        "SuppressedGTIN": col("source.SuppressedGTIN"),
        "ProductType": col("source.ProductType"),
        "MaterialName": col("source.MaterialName"),
        "SubBrand": col("source.SubBrand"),
        "EnoviaObjectId": col("source.EnoviaObjectId"),
        "PMPStatus": col("source.PMPStatus"),
        "PMPTitle": col("source.PMPTitle"),
        "PMPDescription": col("source.PMPDescription"),
        "PreviousPMP": col("source.PreviousPMP"),
        "PreviousFPP": col("source.PreviousFPP"),
        "TechnicalDrawingFileLocation": col("source.TechnicalDrawingFileLocation"),
        "TechDrawingFileName": col("source.TechDrawingFileName"),
        "TechDrawingState": col("source.TechDrawingState"),
        "TechnicalDrawingPrimaryFolderId": col("source.TechnicalDrawingPrimaryFolderId"),
        "TechnicalDrawingAltFolderId": col("source.TechnicalDrawingAltFolderId"),
        "PMPNumLanguages": col("source.PMPNumLanguages"),
        "TechDrawingRevision": col("source.TechDrawingRevision"),
        "CopyVersionLinkedFA": col("source.CopyVersionLinkedFA"),
        "CopyVersionLinkedCIC": col("source.CopyVersionLinkedCIC"),
        "CIC": col("source.CIC"),
        "LatestCopyXMLVersion": col("source.LatestCopyXMLVersion"),
        "LatestCopyXMLState": col("source.LatestCopyXMLState"),
        "Obsolete": col("source.Obsolete"),
        "CopyElementCount": col("source.CopyElementCount"),
        "CaseInsideDimensions": col("source.CaseInsideDimensions"),
        "TechDrawingWithVerEnovia": col("source.TechDrawingWithVerEnovia"),
        "LocalInformation": col("source.LocalInformation"),
        "Othercomment": col("source.Othercomment"),
        "IsPOAOnHold": col("source.IsPOAOnHold"),
        "SecondaryPrinter": col("source.SecondaryPrinter"),
        "AssemblyRework": col("source.AssemblyRework")
    }).whenNotMatchedInsert(values={
        "SYS_CHANGE_VERSION": col("source.SYS_CHANGE_VERSION"),
        "SYS_CHANGE_OPERATION": col("source.SYS_CHANGE_OPERATION"),
        "POAId": col("source.POAId"),
        "PDRId": col("source.PDRId"),
        "POANumber": col("source.POANumber"),
        "AdditionalDesc": col("source.AdditionalDesc"),
        "BrandInfo": col("source.BrandInfo"),
        "Brand": col("source.Brand"),
        "Item": col("source.Item"),
        "Format": col("source.Format"),
        "PackSize": col("source.PackSize"),
        "PackSizeUnit": col("source.PackSizeUnit"),
        "CountryIcons": col("source.CountryIcons"),
        "CountriesOfSale": col("source.CountriesOfSale"),
        "Languages": col("source.Languages"),
        "ManufacturingPlants": col("source.ManufacturingPlants"),
        "TechDrawingWithVer": col("source.TechDrawingWithVer"),
        "PrintingProcess": col("source.PrintingProcess"),
        "InsidePrintingIPMSNumber": col("source.InsidePrintingIPMSNumber"),
        "PackMaterialType": col("source.PackMaterialType"),
        "PackComponentType": col("source.PackComponentType"),
        "FinishedProductCode": col("source.FinishedProductCode"),
        "COBarcode": col("source.COBarcode"),
        "Printer": col("source.Printer"),
        "NewIPMSNumber": col("source.NewIPMSNumber"),
        "OldIPMSNumber": col("source.OldIPMSNumber"),
        "Colours": col("source.Colours"),
        "LastUpdate": col("source.LastUpdate"),
        "ProductExtraVariant": col("source.ProductExtraVariant"),
        "MarketingCountry": col("source.MarketingCountry"),
        "GCAS": col("source.GCAS"),
        "SupplierCode": col("source.SupplierCode"),
        "TPOANumber": col("source.TPOANumber"),
        "MPMSNumber": col("source.MPMSNumber"),
        "PackagingLevel": col("source.PackagingLevel"),
        "CUBarcode": col("source.CUBarcode"),
        "CaseCount": col("source.CaseCount"),
        "SiteId": col("source.SiteId"),
        "DisplayedName": col("source.DisplayedName"),
        "PrintToolMaker": col("source.PrintToolMaker"),
        "Status": col("source.Status"),
        "CICReference": col("source.CICReference"),
        "Enovia": col("source.Enovia"),
        "AFPP": col("source.AFPP"),
        "FPP": col("source.FPP"),
        "BIS": col("source.BIS"),
        "RepId": col("source.RepId"),
        "RDT": col("source.RDT"),
        "PurchaseOrder": col("source.PurchaseOrder"),
        "PackagingCQV": col("source.PackagingCQV"),
        "Substrate": col("source.Substrate"),
        "SpecialPrintFeature": col("source.SpecialPrintFeature"),
        "SalesSamples": col("source.SalesSamples"),
        "CaseType": col("source.CaseType"),
        "PalletPattern": col("source.PalletPattern"),
        "SubstrateColour": col("source.SubstrateColour"),
        "MaxStackHeight": col("source.MaxStackHeight"),
        "CaseOutsideDimensions": col("source.CaseOutsideDimensions"),
        "CUGrossWeight": col("source.CUGrossWeight"),
        "CUNetWeight": col("source.CUNetWeight"),
        "MPMSName": col("source.MPMSName"),
        "MPMSDescription": col("source.MPMSDescription"),
        "PackagingMaterialDescription": col("source.PackagingMaterialDescription"),
        "MaterialCategory": col("source.MaterialCategory"),
        "SuppressedGTIN": col("source.SuppressedGTIN"),
        "ProductType": col("source.ProductType"),
        "MaterialName": col("source.MaterialName"),
        "SubBrand": col("source.SubBrand"),
        "EnoviaObjectId": col("source.EnoviaObjectId"),
        "PMPStatus": col("source.PMPStatus"),
        "PMPTitle": col("source.PMPTitle"),
        "PMPDescription": col("source.PMPDescription"),
        "PreviousPMP": col("source.PreviousPMP"),
        "PreviousFPP": col("source.PreviousFPP"),
        "TechnicalDrawingFileLocation": col("source.TechnicalDrawingFileLocation"),
        "TechDrawingFileName": col("source.TechDrawingFileName"),
        "TechDrawingState": col("source.TechDrawingState"),
        "TechnicalDrawingPrimaryFolderId": col("source.TechnicalDrawingPrimaryFolderId"),
        "TechnicalDrawingAltFolderId": col("source.TechnicalDrawingAltFolderId"),
        "PMPNumLanguages": col("source.PMPNumLanguages"),
        "TechDrawingRevision": col("source.TechDrawingRevision"),
        "CopyVersionLinkedFA": col("source.CopyVersionLinkedFA"),
        "CopyVersionLinkedCIC": col("source.CopyVersionLinkedCIC"),
        "CIC": col("source.CIC"),
        "LatestCopyXMLVersion": col("source.LatestCopyXMLVersion"),
        "LatestCopyXMLState": col("source.LatestCopyXMLState"),
        "Obsolete": col("source.Obsolete"),
        "CopyElementCount": col("source.CopyElementCount"),
        "CaseInsideDimensions": col("source.CaseInsideDimensions"),
        "TechDrawingWithVerEnovia": col("source.TechDrawingWithVerEnovia"),
        "LocalInformation": col("source.LocalInformation"),
        "Othercomment": col("source.Othercomment"),
        "IsPOAOnHold": col("source.IsPOAOnHold"),
        "SecondaryPrinter": col("source.SecondaryPrinter"),
        "AssemblyRework": col("source.AssemblyRework")
    }).execute()

# METADATA ********************

# META {
# META   "language": "python",
# META   "language_group": "synapse_pyspark"
# META }
